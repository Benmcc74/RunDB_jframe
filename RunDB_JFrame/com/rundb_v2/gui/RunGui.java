/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.rundb_v2.gui;

import com.rundb_v2.business.*;
import com.rundb_v2.util.*;
import java.awt.event.ItemEvent;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

/**
 *
 * @author Ben McCarthy
 */
public class RunGui extends javax.swing.JFrame {

	private Logger logger = LogManager.getLogger(RunGui.class);
    private RunDB2Properties prp;
    
    /**
     * Creates new form RunGui
     */
    public RunGui() {
    	logger.info("RunDB_2 Application RunGui() constructor 001 - Logging INFO");
        initComponents();
        initProp();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
    	logger.debug("RunDB_2 Application initComponents() method 001 - Logging DEBUG");

        runTabPane = new javax.swing.JTabbedPane();
        appPanel = new javax.swing.JPanel();
        labelAppTitle = new javax.swing.JLabel();
        runPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        runTable = new javax.swing.JTable();
        labelRunTitle = new javax.swing.JLabel();
        tabPaneRun = new javax.swing.JTabbedPane();
        panelAddRun = new javax.swing.JPanel();
        btnAddRun = new javax.swing.JButton();
        labelAddRunDate = new javax.swing.JLabel();
        fieldAddRunTime = new javax.swing.JTextField();
        fieldAddRunDate = new javax.swing.JTextField();
        labelAddRunTime = new javax.swing.JLabel();
        comboAddRunCrseId = new javax.swing.JComboBox<>();
        fieldAddRunCrse3 = new javax.swing.JTextField();
        fieldAddRunCrse2 = new javax.swing.JTextField();
        labelAddRunCrse2 = new javax.swing.JLabel();
        labelAddRunCrse3 = new javax.swing.JLabel();
        btnRunAddReset = new javax.swing.JButton();
        panelUpdRun = new javax.swing.JPanel();
        btnRunUpdReset = new javax.swing.JButton();
        labelUpdRunDate = new javax.swing.JLabel();
        fieldUpdRunDate = new javax.swing.JTextField();
        labelUpdRunCrse = new javax.swing.JLabel();
        fieldUpdRunCrse = new javax.swing.JTextField();
        labelUpdRunMiles = new javax.swing.JLabel();
        fieldUpdRunMiles = new javax.swing.JTextField();
        fieldUpdRunTime = new javax.swing.JTextField();
        labelUpdRunTime = new javax.swing.JLabel();
        btnUpdRun = new javax.swing.JButton();
        panelDelRun = new javax.swing.JPanel();
        btnRunDelReset = new javax.swing.JButton();
        labelDelRunDate = new javax.swing.JLabel();
        fieldDelRunDate = new javax.swing.JTextField();
        labelDelRunCrse = new javax.swing.JLabel();
        fieldDelRunCrse = new javax.swing.JTextField();
        labelDelRunMiles = new javax.swing.JLabel();
        fieldDelRunMiles = new javax.swing.JTextField();
        fieldDelRunTime = new javax.swing.JTextField();
        labelDelRunTime = new javax.swing.JLabel();
        btnDelRun = new javax.swing.JButton();
        coursePanel = new javax.swing.JPanel();
        tabPaneCourse = new javax.swing.JTabbedPane();
        panelAddCrse = new javax.swing.JPanel();
        btnAddCrse = new javax.swing.JButton();
        fieldAddCrseDesc = new javax.swing.JTextField();
        fieldAddCrseMiles = new javax.swing.JTextField();
        labelAddRunCrse4 = new javax.swing.JLabel();
        labelAddRunCrse5 = new javax.swing.JLabel();
        btnCrseAddReset = new javax.swing.JButton();
        panelUpdCrse = new javax.swing.JPanel();
        btnUpdCrse = new javax.swing.JButton();
        fieldUpdCrseDesc = new javax.swing.JTextField();
        fieldUpdCrseMiles = new javax.swing.JTextField();
        labelUpdCrseMiles = new javax.swing.JLabel();
        labelUpdCrseDesc = new javax.swing.JLabel();
        btnCrseUpdReset = new javax.swing.JButton();
        panelDelCrse = new javax.swing.JPanel();
        btnDelCrse = new javax.swing.JButton();
        fieldDelCrseDesc = new javax.swing.JTextField();
        fieldDelCrseMiles = new javax.swing.JTextField();
        labelDelCrseMiles = new javax.swing.JLabel();
        labelDelCrseDesc = new javax.swing.JLabel();
        btnCrseDelReset = new javax.swing.JButton();
        labelCourseTitle = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        crseTable = new javax.swing.JTable();
        courseRecPanel = new javax.swing.JPanel();
        labelCourseRecsTitle = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        crseRecsTable = new javax.swing.JTable();
        panelCRecsKeySelect = new javax.swing.JPanel();
        comboCrseRecCrseId = new javax.swing.JComboBox<>();
        fieldCRecDesc = new javax.swing.JTextField();
        fieldCRecMiles = new javax.swing.JTextField();
        labelCRecCrseMiles = new javax.swing.JLabel();
        panelCRecsKeyData = new javax.swing.JPanel();
        fieldCRecNumRuns = new javax.swing.JTextField();
        fieldCRecAvgTime = new javax.swing.JTextField();
        fieldCRecBestTime = new javax.swing.JTextField();
        fieldCRecBestDate = new javax.swing.JTextField();
        fieldCRecWorstDate = new javax.swing.JTextField();
        fieldCRecWorstTime = new javax.swing.JTextField();
        labelCRecAvgTime = new javax.swing.JLabel();
        labelCRecBestTime = new javax.swing.JLabel();
        labelCRecWorstTime = new javax.swing.JLabel();
        labelCRecWorstDate = new javax.swing.JLabel();
        labelCRecBestDate = new javax.swing.JLabel();
        labelCRecNumRuns = new javax.swing.JLabel();
        annualRecPanel = new javax.swing.JPanel();
        labelAnnualRecsTitle = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        annRecsTable = new javax.swing.JTable();
        panelARecsKeySelect = new javax.swing.JPanel();
        comboAnnRecYear = new javax.swing.JComboBox<>();
        fieldARecTotal = new javax.swing.JTextField();
        fieldARecMiles = new javax.swing.JTextField();
        labelARecTotMiles = new javax.swing.JLabel();
        labelARecTotRuns = new javax.swing.JLabel();
        lifetimeRecPanel = new javax.swing.JPanel();
        labelLifeRecsTitle = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        lifeRecsTable = new javax.swing.JTable();
        panelLifeKey = new javax.swing.JPanel();
        fieldLifeTotal = new javax.swing.JTextField();
        fieldLifeMiles = new javax.swing.JTextField();
        labelLifeTotMiles = new javax.swing.JLabel();
        labelLifeTotRuns = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1000, 700));

        runTabPane.setPreferredSize(new java.awt.Dimension(800, 600));

        appPanel.setPreferredSize(new java.awt.Dimension(800, 486));

        labelAppTitle.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        labelAppTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelAppTitle.setText("Run Application 2.0");

        javax.swing.GroupLayout appPanelLayout = new javax.swing.GroupLayout(appPanel);
        appPanel.setLayout(appPanelLayout);
        appPanelLayout.setHorizontalGroup(
            appPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(appPanelLayout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addComponent(labelAppTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(236, Short.MAX_VALUE))
        );
        appPanelLayout.setVerticalGroup(
            appPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(appPanelLayout.createSequentialGroup()
                .addGap(104, 104, 104)
                .addComponent(labelAppTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(246, Short.MAX_VALUE))
        );

        runTabPane.addTab("Application", appPanel);

        runPanel.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                runPanelComponentShown(evt);
            }
        });

        runTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "Course", "Miles", "Time"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        runTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                runTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(runTable);
        if (runTable.getColumnModel().getColumnCount() > 0) {
            runTable.getColumnModel().getColumn(0).setResizable(false);
            runTable.getColumnModel().getColumn(0).setPreferredWidth(50);
            runTable.getColumnModel().getColumn(1).setPreferredWidth(300);
            runTable.getColumnModel().getColumn(2).setPreferredWidth(75);
            runTable.getColumnModel().getColumn(3).setPreferredWidth(50);
        }

        labelRunTitle.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        labelRunTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelRunTitle.setText("Run Information");

        panelAddRun.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                panelAddRunComponentShown(evt);
            }
        });

        btnAddRun.setText("ADD A RUN");
        btnAddRun.setMaximumSize(new java.awt.Dimension(100, 60));
        btnAddRun.setMinimumSize(new java.awt.Dimension(100, 60));
        btnAddRun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddRunActionPerformed(evt);
            }
        });

        labelAddRunDate.setText("Date:");

        labelAddRunTime.setText("Time:");

        comboAddRunCrseId.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboAddRunCrseIdItemStateChanged(evt);
            }
        });

        fieldAddRunCrse3.setEditable(false);
        fieldAddRunCrse3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldAddRunCrse3ActionPerformed(evt);
            }
        });

        fieldAddRunCrse2.setEditable(false);
        fieldAddRunCrse2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldAddRunCrse2ActionPerformed(evt);
            }
        });

        labelAddRunCrse2.setText("Miles");

        labelAddRunCrse3.setText("Course:");

        btnRunAddReset.setText("Reset");
        btnRunAddReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRunAddResetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelAddRunLayout = new javax.swing.GroupLayout(panelAddRun);
        panelAddRun.setLayout(panelAddRunLayout);
        panelAddRunLayout.setHorizontalGroup(
            panelAddRunLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAddRunLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(panelAddRunLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelAddRunLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(labelAddRunTime))
                    .addComponent(labelAddRunDate)
                    .addComponent(labelAddRunCrse3))
                .addGap(50, 50, 50)
                .addGroup(panelAddRunLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelAddRunLayout.createSequentialGroup()
                        .addComponent(fieldAddRunTime, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnRunAddReset, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelAddRunLayout.createSequentialGroup()
                        .addComponent(fieldAddRunDate, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAddRun, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelAddRunLayout.createSequentialGroup()
                        .addComponent(comboAddRunCrseId, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(150, 150, 150)
                        .addGroup(panelAddRunLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(panelAddRunLayout.createSequentialGroup()
                                .addComponent(labelAddRunCrse2)
                                .addGap(35, 35, 35)
                                .addComponent(fieldAddRunCrse2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(fieldAddRunCrse3, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 242, Short.MAX_VALUE)))
                .addGap(30, 30, 30))
        );
        panelAddRunLayout.setVerticalGroup(
            panelAddRunLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAddRunLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnAddRun, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(104, 104, 104)
                .addGroup(panelAddRunLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fieldAddRunTime, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelAddRunTime)
                    .addComponent(btnRunAddReset))
                .addGap(16, 16, 16))
            .addGroup(panelAddRunLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(panelAddRunLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelAddRunDate)
                    .addComponent(fieldAddRunDate, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelAddRunLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelAddRunLayout.createSequentialGroup()
                        .addComponent(fieldAddRunCrse3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelAddRunLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelAddRunCrse2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(fieldAddRunCrse2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(59, 59, 59))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelAddRunLayout.createSequentialGroup()
                        .addGroup(panelAddRunLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(comboAddRunCrseId, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelAddRunCrse3))
                        .addGap(94, 94, 94))))
        );

        tabPaneRun.addTab("Add", panelAddRun);

        panelUpdRun.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                panelUpdRunComponentShown(evt);
            }
        });

        btnRunUpdReset.setText("Reset");
        btnRunUpdReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRunUpdResetActionPerformed(evt);
            }
        });

        labelUpdRunDate.setText("Date:");

        fieldUpdRunDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldUpdRunDateActionPerformed(evt);
            }
        });

        labelUpdRunCrse.setText("Course:");

        fieldUpdRunCrse.setEditable(false);

        labelUpdRunMiles.setText("Miles:");

        fieldUpdRunMiles.setEditable(false);
        fieldUpdRunMiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldUpdRunMilesActionPerformed(evt);
            }
        });

        labelUpdRunTime.setText("Time:");

        btnUpdRun.setText("UPDATE A RUN");
        btnUpdRun.setMaximumSize(new java.awt.Dimension(100, 60));
        btnUpdRun.setMinimumSize(new java.awt.Dimension(100, 60));
        btnUpdRun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdRunActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelUpdRunLayout = new javax.swing.GroupLayout(panelUpdRun);
        panelUpdRun.setLayout(panelUpdRunLayout);
        panelUpdRunLayout.setHorizontalGroup(
            panelUpdRunLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelUpdRunLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelUpdRunLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelUpdRunDate)
                    .addComponent(labelUpdRunCrse)
                    .addComponent(labelUpdRunMiles)
                    .addComponent(labelUpdRunTime))
                .addGap(59, 59, 59)
                .addGroup(panelUpdRunLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelUpdRunLayout.createSequentialGroup()
                        .addComponent(fieldUpdRunCrse, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelUpdRunLayout.createSequentialGroup()
                        .addGroup(panelUpdRunLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(panelUpdRunLayout.createSequentialGroup()
                                .addGroup(panelUpdRunLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(fieldUpdRunTime, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(fieldUpdRunMiles, javax.swing.GroupLayout.Alignment.LEADING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnRunUpdReset, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelUpdRunLayout.createSequentialGroup()
                                .addComponent(fieldUpdRunDate, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnUpdRun, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(28, 28, 28))))
        );
        panelUpdRunLayout.setVerticalGroup(
            panelUpdRunLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelUpdRunLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelUpdRunLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelUpdRunDate)
                    .addComponent(fieldUpdRunDate, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdRun, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(panelUpdRunLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fieldUpdRunCrse, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelUpdRunCrse))
                .addGap(11, 11, 11)
                .addGroup(panelUpdRunLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fieldUpdRunMiles, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelUpdRunMiles))
                .addGap(18, 18, 18)
                .addGroup(panelUpdRunLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelUpdRunTime)
                    .addComponent(fieldUpdRunTime, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRunUpdReset))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tabPaneRun.addTab("Update", panelUpdRun);

        panelDelRun.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                panelDelRunComponentShown(evt);
            }
        });

        btnRunDelReset.setText("Reset");
        btnRunDelReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRunDelResetActionPerformed(evt);
            }
        });

        labelDelRunDate.setText("Date:");

        fieldDelRunDate.setEditable(false);
        fieldDelRunDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldDelRunDateActionPerformed(evt);
            }
        });

        labelDelRunCrse.setText("Course:");

        fieldDelRunCrse.setEditable(false);

        labelDelRunMiles.setText("Miles:");

        fieldDelRunMiles.setEditable(false);
        fieldDelRunMiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldDelRunMilesActionPerformed(evt);
            }
        });

        fieldDelRunTime.setEditable(false);

        labelDelRunTime.setText("Time:");

        btnDelRun.setText("DELETE A RUN");
        btnDelRun.setMaximumSize(new java.awt.Dimension(100, 60));
        btnDelRun.setMinimumSize(new java.awt.Dimension(100, 60));
        btnDelRun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelRunActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelDelRunLayout = new javax.swing.GroupLayout(panelDelRun);
        panelDelRun.setLayout(panelDelRunLayout);
        panelDelRunLayout.setHorizontalGroup(
            panelDelRunLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDelRunLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelDelRunLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelDelRunDate)
                    .addComponent(labelDelRunCrse)
                    .addComponent(labelDelRunMiles)
                    .addComponent(labelDelRunTime))
                .addGap(59, 59, 59)
                .addGroup(panelDelRunLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelDelRunLayout.createSequentialGroup()
                        .addComponent(fieldDelRunDate, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 472, Short.MAX_VALUE)
                        .addComponent(btnDelRun, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelDelRunLayout.createSequentialGroup()
                        .addComponent(fieldDelRunCrse, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(panelDelRunLayout.createSequentialGroup()
                        .addGroup(panelDelRunLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(fieldDelRunTime, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fieldDelRunMiles, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnRunDelReset, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(28, 28, 28))
        );
        panelDelRunLayout.setVerticalGroup(
            panelDelRunLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelDelRunLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelDelRunLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelDelRunDate)
                    .addComponent(fieldDelRunDate, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelRun, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(panelDelRunLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fieldDelRunCrse, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelDelRunCrse))
                .addGap(14, 14, 14)
                .addGroup(panelDelRunLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fieldDelRunMiles, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelDelRunMiles))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addGroup(panelDelRunLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fieldDelRunTime, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelDelRunTime)
                    .addComponent(btnRunDelReset))
                .addContainerGap())
        );

        tabPaneRun.addTab("Delete", panelDelRun);

        javax.swing.GroupLayout runPanelLayout = new javax.swing.GroupLayout(runPanel);
        runPanel.setLayout(runPanelLayout);
        runPanelLayout.setHorizontalGroup(
            runPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(runPanelLayout.createSequentialGroup()
                .addGroup(runPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(runPanelLayout.createSequentialGroup()
                        .addGap(301, 301, 301)
                        .addComponent(labelRunTitle))
                    .addGroup(runPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(tabPaneRun))
                    .addGroup(runPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1)))
                .addContainerGap(43, Short.MAX_VALUE))
        );
        runPanelLayout.setVerticalGroup(
            runPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, runPanelLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(labelRunTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(tabPaneRun, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        runTabPane.addTab("Run Maintenance", runPanel);
        runPanel.getAccessibleContext().setAccessibleName("");

        panelAddCrse.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                panelAddCrseComponentShown(evt);
            }
        });

        btnAddCrse.setText("ADD A COURSE");
        btnAddCrse.setMaximumSize(new java.awt.Dimension(100, 60));
        btnAddCrse.setMinimumSize(new java.awt.Dimension(100, 60));
        btnAddCrse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddCrseActionPerformed(evt);
            }
        });

        fieldAddCrseDesc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldAddCrseDescActionPerformed(evt);
            }
        });

        fieldAddCrseMiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldAddCrseMilesActionPerformed(evt);
            }
        });

        labelAddRunCrse4.setText("Miles");

        labelAddRunCrse5.setText("Course:");

        btnCrseAddReset.setText("Reset");
        btnCrseAddReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrseAddResetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelAddCrseLayout = new javax.swing.GroupLayout(panelAddCrse);
        panelAddCrse.setLayout(panelAddCrseLayout);
        panelAddCrseLayout.setHorizontalGroup(
            panelAddCrseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAddCrseLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(panelAddCrseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(labelAddRunCrse5)
                    .addComponent(labelAddRunCrse4))
                .addGroup(panelAddCrseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelAddCrseLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnAddCrse, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelAddCrseLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                        .addGroup(panelAddCrseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelAddCrseLayout.createSequentialGroup()
                                .addComponent(fieldAddCrseDesc, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 485, Short.MAX_VALUE))
                            .addGroup(panelAddCrseLayout.createSequentialGroup()
                                .addComponent(fieldAddCrseMiles, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnCrseAddReset, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(30, 30, 30))
        );
        panelAddCrseLayout.setVerticalGroup(
            panelAddCrseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAddCrseLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelAddCrseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelAddCrseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(labelAddRunCrse5)
                        .addComponent(fieldAddCrseDesc, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnAddCrse, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(panelAddCrseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelAddCrseLayout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(panelAddCrseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelAddRunCrse4)
                            .addComponent(fieldAddCrseMiles, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panelAddCrseLayout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(btnCrseAddReset)))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        tabPaneCourse.addTab("Add", panelAddCrse);

        panelUpdCrse.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                panelUpdCrseComponentShown(evt);
            }
        });

        btnUpdCrse.setText("UPDATE A COURSE");
        btnUpdCrse.setMaximumSize(new java.awt.Dimension(100, 60));
        btnUpdCrse.setMinimumSize(new java.awt.Dimension(100, 60));
        btnUpdCrse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdCrseActionPerformed(evt);
            }
        });

        fieldUpdCrseDesc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldUpdCrseDescActionPerformed(evt);
            }
        });

        fieldUpdCrseMiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldUpdCrseMilesActionPerformed(evt);
            }
        });

        labelUpdCrseMiles.setText("Miles");

        labelUpdCrseDesc.setText("Course:");

        btnCrseUpdReset.setText("Reset");
        btnCrseUpdReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrseUpdResetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelUpdCrseLayout = new javax.swing.GroupLayout(panelUpdCrse);
        panelUpdCrse.setLayout(panelUpdCrseLayout);
        panelUpdCrseLayout.setHorizontalGroup(
            panelUpdCrseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelUpdCrseLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(panelUpdCrseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(labelUpdCrseDesc)
                    .addComponent(labelUpdCrseMiles))
                .addGroup(panelUpdCrseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelUpdCrseLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnUpdCrse, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelUpdCrseLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                        .addGroup(panelUpdCrseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelUpdCrseLayout.createSequentialGroup()
                                .addComponent(fieldUpdCrseDesc, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 485, Short.MAX_VALUE))
                            .addGroup(panelUpdCrseLayout.createSequentialGroup()
                                .addComponent(fieldUpdCrseMiles, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnCrseUpdReset, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(30, 30, 30))
        );
        panelUpdCrseLayout.setVerticalGroup(
            panelUpdCrseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelUpdCrseLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelUpdCrseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelUpdCrseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(labelUpdCrseDesc)
                        .addComponent(fieldUpdCrseDesc, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnUpdCrse, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(panelUpdCrseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelUpdCrseLayout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(panelUpdCrseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelUpdCrseMiles)
                            .addComponent(fieldUpdCrseMiles, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panelUpdCrseLayout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(btnCrseUpdReset)))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        tabPaneCourse.addTab("Update", panelUpdCrse);

        panelDelCrse.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                panelDelCrseComponentShown(evt);
            }
        });

        btnDelCrse.setText("DELETE A COURSE");
        btnDelCrse.setMaximumSize(new java.awt.Dimension(100, 60));
        btnDelCrse.setMinimumSize(new java.awt.Dimension(100, 60));
        btnDelCrse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelCrseActionPerformed(evt);
            }
        });

        fieldDelCrseDesc.setEditable(false);
        fieldDelCrseDesc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldDelCrseDescActionPerformed(evt);
            }
        });

        fieldDelCrseMiles.setEditable(false);
        fieldDelCrseMiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldDelCrseMilesActionPerformed(evt);
            }
        });

        labelDelCrseMiles.setText("Miles");

        labelDelCrseDesc.setText("Course:");

        btnCrseDelReset.setText("Reset");
        btnCrseDelReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrseDelResetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelDelCrseLayout = new javax.swing.GroupLayout(panelDelCrse);
        panelDelCrse.setLayout(panelDelCrseLayout);
        panelDelCrseLayout.setHorizontalGroup(
            panelDelCrseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDelCrseLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(panelDelCrseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(labelDelCrseDesc)
                    .addComponent(labelDelCrseMiles))
                .addGroup(panelDelCrseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelDelCrseLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnDelCrse, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelDelCrseLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                        .addGroup(panelDelCrseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelDelCrseLayout.createSequentialGroup()
                                .addComponent(fieldDelCrseDesc, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 485, Short.MAX_VALUE))
                            .addGroup(panelDelCrseLayout.createSequentialGroup()
                                .addComponent(fieldDelCrseMiles, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnCrseDelReset, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(30, 30, 30))
        );
        panelDelCrseLayout.setVerticalGroup(
            panelDelCrseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDelCrseLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelDelCrseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelDelCrseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(labelDelCrseDesc)
                        .addComponent(fieldDelCrseDesc, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnDelCrse, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(panelDelCrseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelDelCrseLayout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(panelDelCrseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelDelCrseMiles)
                            .addComponent(fieldDelCrseMiles, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panelDelCrseLayout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(btnCrseDelReset)))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        tabPaneCourse.addTab("Delete", panelDelCrse);

        labelCourseTitle.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        labelCourseTitle.setText("Course Information");

        crseTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Course", "Miles"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        crseTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                crseTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(crseTable);
        if (crseTable.getColumnModel().getColumnCount() > 0) {
            crseTable.getColumnModel().getColumn(0).setResizable(false);
            crseTable.getColumnModel().getColumn(0).setPreferredWidth(50);
            crseTable.getColumnModel().getColumn(1).setPreferredWidth(300);
            crseTable.getColumnModel().getColumn(2).setPreferredWidth(75);
        }

        javax.swing.GroupLayout coursePanelLayout = new javax.swing.GroupLayout(coursePanel);
        coursePanel.setLayout(coursePanelLayout);
        coursePanelLayout.setHorizontalGroup(
            coursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(coursePanelLayout.createSequentialGroup()
                .addGroup(coursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(coursePanelLayout.createSequentialGroup()
                        .addGap(282, 282, 282)
                        .addComponent(labelCourseTitle))
                    .addGroup(coursePanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(tabPaneCourse, javax.swing.GroupLayout.DEFAULT_SIZE, 878, Short.MAX_VALUE))
                    .addGroup(coursePanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2)))
                .addContainerGap(57, Short.MAX_VALUE))
        );
        coursePanelLayout.setVerticalGroup(
            coursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(coursePanelLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(labelCourseTitle)
                .addGap(44, 44, 44)
                .addComponent(tabPaneCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(82, Short.MAX_VALUE))
        );

        runTabPane.addTab("Course Maintenance", coursePanel);

        courseRecPanel.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                courseRecPanelComponentShown(evt);
            }
        });

        labelCourseRecsTitle.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        labelCourseRecsTitle.setText("Course Records");

        crseRecsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "Course", "Time"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        crseRecsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                crseRecsTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(crseRecsTable);
        if (crseRecsTable.getColumnModel().getColumnCount() > 0) {
            crseRecsTable.getColumnModel().getColumn(0).setResizable(false);
            crseRecsTable.getColumnModel().getColumn(0).setPreferredWidth(75);
            crseRecsTable.getColumnModel().getColumn(1).setPreferredWidth(250);
            crseRecsTable.getColumnModel().getColumn(2).setPreferredWidth(100);
        }

        comboCrseRecCrseId.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboCrseRecCrseIdItemStateChanged(evt);
            }
        });

        fieldCRecDesc.setEditable(false);

        fieldCRecMiles.setEditable(false);

        labelCRecCrseMiles.setText("Miles:");

        javax.swing.GroupLayout panelCRecsKeySelectLayout = new javax.swing.GroupLayout(panelCRecsKeySelect);
        panelCRecsKeySelect.setLayout(panelCRecsKeySelectLayout);
        panelCRecsKeySelectLayout.setHorizontalGroup(
            panelCRecsKeySelectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCRecsKeySelectLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(comboCrseRecCrseId, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(fieldCRecDesc, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(labelCRecCrseMiles)
                .addGap(18, 18, 18)
                .addComponent(fieldCRecMiles, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50))
        );
        panelCRecsKeySelectLayout.setVerticalGroup(
            panelCRecsKeySelectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCRecsKeySelectLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelCRecsKeySelectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboCrseRecCrseId, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fieldCRecDesc, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fieldCRecMiles, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelCRecCrseMiles))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        fieldCRecNumRuns.setEditable(false);

        fieldCRecAvgTime.setEditable(false);

        fieldCRecBestTime.setEditable(false);

        fieldCRecBestDate.setEditable(false);
        fieldCRecBestDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldCRecBestDateActionPerformed(evt);
            }
        });

        fieldCRecWorstDate.setEditable(false);
        fieldCRecWorstDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldCRecWorstDateActionPerformed(evt);
            }
        });

        fieldCRecWorstTime.setEditable(false);

        labelCRecAvgTime.setText("Average Time:");

        labelCRecBestTime.setText("Best Time:");

        labelCRecWorstTime.setText("Worst Time:");

        labelCRecWorstDate.setText("Date:");

        labelCRecBestDate.setText("Date:");

        labelCRecNumRuns.setText("Number of Runs:");

        javax.swing.GroupLayout panelCRecsKeyDataLayout = new javax.swing.GroupLayout(panelCRecsKeyData);
        panelCRecsKeyData.setLayout(panelCRecsKeyDataLayout);
        panelCRecsKeyDataLayout.setHorizontalGroup(
            panelCRecsKeyDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCRecsKeyDataLayout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addGroup(panelCRecsKeyDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(labelCRecAvgTime)
                    .addComponent(labelCRecBestTime)
                    .addComponent(labelCRecBestDate))
                .addGap(18, 18, 18)
                .addGroup(panelCRecsKeyDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelCRecsKeyDataLayout.createSequentialGroup()
                        .addComponent(fieldCRecAvgTime, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 312, Short.MAX_VALUE)
                        .addComponent(labelCRecNumRuns)
                        .addGap(18, 18, 18)
                        .addComponent(fieldCRecNumRuns, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelCRecsKeyDataLayout.createSequentialGroup()
                        .addComponent(fieldCRecBestTime, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(labelCRecWorstTime)
                        .addGap(18, 18, 18)
                        .addComponent(fieldCRecWorstTime, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelCRecsKeyDataLayout.createSequentialGroup()
                        .addComponent(fieldCRecBestDate, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(labelCRecWorstDate)
                        .addGap(18, 18, 18)
                        .addComponent(fieldCRecWorstDate, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(50, 50, 50))
        );
        panelCRecsKeyDataLayout.setVerticalGroup(
            panelCRecsKeyDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCRecsKeyDataLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(panelCRecsKeyDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fieldCRecAvgTime, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fieldCRecNumRuns, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelCRecAvgTime)
                    .addComponent(labelCRecNumRuns))
                .addGap(32, 32, 32)
                .addGroup(panelCRecsKeyDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fieldCRecBestTime, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelCRecBestTime)
                    .addComponent(fieldCRecWorstTime, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelCRecWorstTime))
                .addGap(18, 18, 18)
                .addGroup(panelCRecsKeyDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fieldCRecBestDate, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelCRecBestDate)
                    .addComponent(fieldCRecWorstDate, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelCRecWorstDate))
                .addContainerGap(41, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout courseRecPanelLayout = new javax.swing.GroupLayout(courseRecPanel);
        courseRecPanel.setLayout(courseRecPanelLayout);
        courseRecPanelLayout.setHorizontalGroup(
            courseRecPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(courseRecPanelLayout.createSequentialGroup()
                .addGroup(courseRecPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(courseRecPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 760, Short.MAX_VALUE))
                    .addGroup(courseRecPanelLayout.createSequentialGroup()
                        .addGap(282, 282, 282)
                        .addComponent(labelCourseRecsTitle)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(courseRecPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(panelCRecsKeySelect, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(courseRecPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(panelCRecsKeyData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(25, 25, 25))
        );
        courseRecPanelLayout.setVerticalGroup(
            courseRecPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(courseRecPanelLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(labelCourseRecsTitle)
                .addGap(18, 18, 18)
                .addComponent(panelCRecsKeySelect, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(panelCRecsKeyData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        runTabPane.addTab("Course Records", courseRecPanel);

        annualRecPanel.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                annualRecPanelComponentShown(evt);
            }
        });

        labelAnnualRecsTitle.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        labelAnnualRecsTitle.setText("Annual Records");

        annRecsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Course", "Miles", "Total", "Best Time", "Date", "Worst Time", "Date", "Average Time"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        annRecsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                annRecsTableMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(annRecsTable);
        if (annRecsTable.getColumnModel().getColumnCount() > 0) {
            annRecsTable.getColumnModel().getColumn(0).setResizable(false);
            annRecsTable.getColumnModel().getColumn(0).setPreferredWidth(10);
            annRecsTable.getColumnModel().getColumn(1).setPreferredWidth(115);
            annRecsTable.getColumnModel().getColumn(2).setPreferredWidth(15);
            annRecsTable.getColumnModel().getColumn(3).setPreferredWidth(20);
            annRecsTable.getColumnModel().getColumn(4).setPreferredWidth(60);
            annRecsTable.getColumnModel().getColumn(5).setPreferredWidth(55);
            annRecsTable.getColumnModel().getColumn(6).setPreferredWidth(60);
            annRecsTable.getColumnModel().getColumn(7).setPreferredWidth(55);
            annRecsTable.getColumnModel().getColumn(8).setPreferredWidth(60);
        }

        comboAnnRecYear.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboAnnRecYearItemStateChanged(evt);
            }
        });

        fieldARecTotal.setEditable(false);

        fieldARecMiles.setEditable(false);

        labelARecTotMiles.setText("Total Miles:");

        labelARecTotRuns.setText("Total Runs:");

        javax.swing.GroupLayout panelARecsKeySelectLayout = new javax.swing.GroupLayout(panelARecsKeySelect);
        panelARecsKeySelect.setLayout(panelARecsKeySelectLayout);
        panelARecsKeySelectLayout.setHorizontalGroup(
            panelARecsKeySelectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelARecsKeySelectLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(comboAnnRecYear, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(labelARecTotRuns)
                .addGap(35, 35, 35)
                .addComponent(fieldARecTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62)
                .addComponent(labelARecTotMiles)
                .addGap(18, 18, 18)
                .addComponent(fieldARecMiles, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50))
        );
        panelARecsKeySelectLayout.setVerticalGroup(
            panelARecsKeySelectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelARecsKeySelectLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelARecsKeySelectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboAnnRecYear, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fieldARecTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fieldARecMiles, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelARecTotMiles)
                    .addComponent(labelARecTotRuns))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout annualRecPanelLayout = new javax.swing.GroupLayout(annualRecPanel);
        annualRecPanel.setLayout(annualRecPanelLayout);
        annualRecPanelLayout.setHorizontalGroup(
            annualRecPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(annualRecPanelLayout.createSequentialGroup()
                .addGroup(annualRecPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(annualRecPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 760, Short.MAX_VALUE))
                    .addGroup(annualRecPanelLayout.createSequentialGroup()
                        .addGap(282, 282, 282)
                        .addComponent(labelAnnualRecsTitle)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(annualRecPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(panelARecsKeySelect, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(25, 25, 25))
        );
        annualRecPanelLayout.setVerticalGroup(
            annualRecPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(annualRecPanelLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(labelAnnualRecsTitle)
                .addGap(18, 18, 18)
                .addComponent(panelARecsKeySelect, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 441, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        runTabPane.addTab("Annual Records", annualRecPanel);

        lifetimeRecPanel.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                lifetimeRecPanelComponentShown(evt);
            }
        });

        labelLifeRecsTitle.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        labelLifeRecsTitle.setText("Lifetime Records");

        lifeRecsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Course", "Miles", "Total", "Best Time", "Date", "Worst Time", "Date", "Average Time"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        lifeRecsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lifeRecsTableMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(lifeRecsTable);
        if (lifeRecsTable.getColumnModel().getColumnCount() > 0) {
            lifeRecsTable.getColumnModel().getColumn(0).setResizable(false);
            lifeRecsTable.getColumnModel().getColumn(0).setPreferredWidth(10);
            lifeRecsTable.getColumnModel().getColumn(1).setPreferredWidth(115);
            lifeRecsTable.getColumnModel().getColumn(2).setPreferredWidth(15);
            lifeRecsTable.getColumnModel().getColumn(3).setPreferredWidth(20);
            lifeRecsTable.getColumnModel().getColumn(4).setPreferredWidth(60);
            lifeRecsTable.getColumnModel().getColumn(5).setPreferredWidth(55);
            lifeRecsTable.getColumnModel().getColumn(6).setPreferredWidth(60);
            lifeRecsTable.getColumnModel().getColumn(7).setPreferredWidth(55);
            lifeRecsTable.getColumnModel().getColumn(8).setPreferredWidth(60);
        }

        fieldLifeTotal.setEditable(false);

        fieldLifeMiles.setEditable(false);
        fieldLifeMiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldLifeMilesActionPerformed(evt);
            }
        });

        labelLifeTotMiles.setText("Total Miles:");

        labelLifeTotRuns.setText("Total Runs:");

        javax.swing.GroupLayout panelLifeKeyLayout = new javax.swing.GroupLayout(panelLifeKey);
        panelLifeKey.setLayout(panelLifeKeyLayout);
        panelLifeKeyLayout.setHorizontalGroup(
            panelLifeKeyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLifeKeyLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(labelLifeTotRuns)
                .addGap(37, 37, 37)
                .addComponent(fieldLifeTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(101, 101, 101)
                .addComponent(labelLifeTotMiles)
                .addGap(48, 48, 48)
                .addComponent(fieldLifeMiles, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelLifeKeyLayout.setVerticalGroup(
            panelLifeKeyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLifeKeyLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelLifeKeyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fieldLifeTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fieldLifeMiles, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelLifeTotMiles)
                    .addComponent(labelLifeTotRuns))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout lifetimeRecPanelLayout = new javax.swing.GroupLayout(lifetimeRecPanel);
        lifetimeRecPanel.setLayout(lifetimeRecPanelLayout);
        lifetimeRecPanelLayout.setHorizontalGroup(
            lifetimeRecPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(lifetimeRecPanelLayout.createSequentialGroup()
                .addGroup(lifetimeRecPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(lifetimeRecPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 760, Short.MAX_VALUE))
                    .addGroup(lifetimeRecPanelLayout.createSequentialGroup()
                        .addGap(282, 282, 282)
                        .addComponent(labelLifeRecsTitle)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(lifetimeRecPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(panelLifeKey, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(25, 25, 25))
        );
        lifetimeRecPanelLayout.setVerticalGroup(
            lifetimeRecPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(lifetimeRecPanelLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(labelLifeRecsTitle)
                .addGap(18, 18, 18)
                .addComponent(panelLifeKey, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        runTabPane.addTab("Lifetime Records", lifetimeRecPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(runTabPane, javax.swing.GroupLayout.PREFERRED_SIZE, 950, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(runTabPane, javax.swing.GroupLayout.PREFERRED_SIZE, 650, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void initProp() {
    	logger.debug("RunDB_2 Application initProp() method 001 - Logging DEBUG");

    	prp = new RunDB2Properties();
        prp.loadRunProp();
    }

    
    private void runPanelComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_runPanelComponentShown
    	logger.debug("RunDB_2 Application runPanelComponentShown() method 001 - Logging DEBUG");
        //Run Maint Panel
        buildCompRunsTable();
    }//GEN-LAST:event_runPanelComponentShown

    private void runTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_runTableMouseClicked
    	logger.debug("RunDB_2 Application runTableMouseClicked() method 001 - Logging DEBUG");
        //Populate fields when user selects entry from Run Table on Run Maint
        DefaultTableModel model = (DefaultTableModel)runTable.getModel();
        int selectedRowIndex = runTable.getSelectedRow();
        
        fieldUpdRunDate.setText(model.getValueAt(selectedRowIndex, 0).toString());
        fieldUpdRunCrse.setText(model.getValueAt(selectedRowIndex, 1).toString());
        fieldUpdRunMiles.setText(model.getValueAt(selectedRowIndex, 2).toString());
        fieldUpdRunTime.setText(model.getValueAt(selectedRowIndex, 3).toString());
        
        fieldDelRunDate.setText(model.getValueAt(selectedRowIndex, 0).toString());
        fieldDelRunCrse.setText(model.getValueAt(selectedRowIndex, 1).toString());
        fieldDelRunMiles.setText(model.getValueAt(selectedRowIndex, 2).toString());
        fieldDelRunTime.setText(model.getValueAt(selectedRowIndex, 3).toString());
    }//GEN-LAST:event_runTableMouseClicked

    private void btnRunUpdResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRunUpdResetActionPerformed
    	logger.debug("RunDB_2 Application btnRunUpdResetActionPerformed() method 001 - Logging DEBUG");
        //Initialise fields on Run Maint when Resest clicked
        fieldUpdRunDate.setText("");
        fieldUpdRunCrse.setText("");
        fieldUpdRunMiles.setText("");
        fieldUpdRunTime.setText("");
        runTable.getSelectionModel().clearSelection();
    }//GEN-LAST:event_btnRunUpdResetActionPerformed

    private void fieldUpdRunDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldUpdRunDateActionPerformed
    	logger.debug("RunDB_2 Application fieldUpdRunDateActionPerformed() method 001 - Logging DEBUG");
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldUpdRunDateActionPerformed

    private void fieldUpdRunMilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldUpdRunMilesActionPerformed
    	logger.debug("RunDB_2 Application fieldUpdRunMilesActionPerformed() method 001 - Logging DEBUG");
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldUpdRunMilesActionPerformed

    private void panelUpdRunComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_panelUpdRunComponentShown
    	logger.debug("RunDB_2 Application panelUpdRunComponentShown() method 001 - Logging DEBUG");

//Build Run Table and initialise fields on Run Main/Update Run Tabs when screen loaded
        buildCompRunsTable();

        fieldUpdRunDate.setText("");
        fieldUpdRunCrse.setText("");
        fieldUpdRunMiles.setText("");
        fieldUpdRunTime.setText("");
    }//GEN-LAST:event_panelUpdRunComponentShown

    private void panelAddRunComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_panelAddRunComponentShown
    	logger.debug("RunDB_2 Application panelAddRunComponentShown() method 001 - Logging DEBUG");
//Build Run Table when Run Maint/Add Run screen is loaded
        buildCompRunsTable();
//Build list of Courses for Course ID Dropdown Combo
        Course cr = new Course();
        ArrayList<ArrayList<String>> crseListRecs;
        crseListRecs = cr.getCrseList();

        int index = 0;
        comboAddRunCrseId.removeAllItems();
        fieldAddRunCrse3.setText("");
        fieldAddRunCrse2.setText("");
        for(ArrayList<String> row : crseListRecs) {
            comboAddRunCrseId.addItem(row.get(0));
            if (index == 0){
                fieldAddRunCrse3.setText(row.get(1));
                fieldAddRunCrse2.setText(row.get(2));
            }
            index++;
        }
        
    }//GEN-LAST:event_panelAddRunComponentShown

    private void btnAddRunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddRunActionPerformed
    	logger.debug("RunDB_2 Application btnAddRunActionPerformed() method 001 - Logging DEBUG");
        //Get the Course ID from selected entry on Course ID Combo box 
        Course cr = new Course();
        ArrayList<ArrayList<String>> crseListRecs;
        crseListRecs = cr.getCrseList();
        int selectRow = 0;
        int index = 0;
        for(ArrayList<String> row : crseListRecs) {
            if (index == comboAddRunCrseId.getSelectedIndex()){
                selectRow = Integer.parseInt(row.get(0));
            }
            index++;
        }

        //Validate the Date and Time fields
        FieldValidator fv = new FieldValidator();

        if(fv.validateDate(fieldAddRunDate.getText())) {
            if(fv.validateTime(fieldAddRunTime.getText())) {
                Run r1 = new Run();
                r1.addRun(selectRow, fieldAddRunDate.getText(), fieldAddRunTime.getText());
            } else {
                JOptionPane.showMessageDialog(this, prp.getRunProp("err.msg.invalid.time"), "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
        } else {
            JOptionPane.showMessageDialog(this, prp.getRunProp("err.msg.invalid.date"), "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

    //Build Table of runs
        buildCompRunsTable();
    }//GEN-LAST:event_btnAddRunActionPerformed

    private void comboAddRunCrseIdItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboAddRunCrseIdItemStateChanged
    	logger.debug("RunDB_2 Application comboAddRunCrseIdItemStateChanged() method 001 - Logging DEBUG");
        // when a user selects a Course ID from dropdown, populate corresponding desc mileage fields 
        if (evt.getStateChange() == ItemEvent.DESELECTED){
        } else {
            //Build list of Courses
            Course cr = new Course();
            ArrayList<ArrayList<String>> crseListRecs;
            crseListRecs = cr.getCrseList();

            int index = 0;
            for(ArrayList<String> row : crseListRecs) {
                if (index == comboAddRunCrseId.getSelectedIndex()){
                    fieldAddRunCrse3.setText(row.get(1));
                    fieldAddRunCrse2.setText(row.get(2));
                }
                index++;
            }

        }
    }//GEN-LAST:event_comboAddRunCrseIdItemStateChanged

    private void btnRunAddResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRunAddResetActionPerformed
    	logger.debug("RunDB_2 Application btnRunAddResetActionPerformed() method 001 - Logging DEBUG");
        //Initialise fields on Run Maint/Add Run when Reset clicked
        fieldAddRunDate.setText("");
        fieldAddRunTime.setText("");
        runTable.getSelectionModel().clearSelection();

    }//GEN-LAST:event_btnRunAddResetActionPerformed

    private void fieldAddRunCrse3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldAddRunCrse3ActionPerformed
    	logger.debug("RunDB_2 Application fieldAddRunCrse3ActionPerformed() method 001 - Logging DEBUG");
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldAddRunCrse3ActionPerformed

    private void fieldAddRunCrse2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldAddRunCrse2ActionPerformed
    	logger.debug("RunDB_2 Application fieldAddRunCrse2ActionPerformed() method 001 - Logging DEBUG");
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldAddRunCrse2ActionPerformed

    private void btnUpdRunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdRunActionPerformed
    	logger.debug("RunDB_2 Application btnUpdRunActionPerformed() method 001 - Logging DEBUG");
        //Update Run clicked on Run Maint/Update Run
        int selectRow;
        //Ensure a row is selected
        if(runTable.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this, prp.getRunProp("err.msg.updRun.no.selection"), "Error", JOptionPane.ERROR_MESSAGE);
            return;
        } else {
            selectRow = runTable.getSelectedRow(); 
        }
        //Validate the Date and Time fields
        FieldValidator fv = new FieldValidator();
        
        if(fv.validateDate(fieldUpdRunDate.getText())) {
            if(fv.validateTime(fieldUpdRunTime.getText())) {
                LifetimeRecord lr = new LifetimeRecord();
                ArrayList<ArrayList<String>> runRecs;
                runRecs = lr.getLifetimeData();
        
                for(int i = 0; i< runRecs.size(); i++) {
                    if (i == selectRow){
                        Run r1 = new Run();
                        r1.updateRun(Integer.parseInt(runRecs.get(i).get(5)), Integer.parseInt(runRecs.get(i).get(1)), fieldUpdRunDate.getText(), fieldUpdRunTime.getText());
                    }
                }
            } else {
                JOptionPane.showMessageDialog(this, prp.getRunProp("err.msg.invalid.time"), "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
        } else {
            JOptionPane.showMessageDialog(this, prp.getRunProp("err.msg.invalid.date"), "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        //Build Table of runs
        buildCompRunsTable();
        //Ensure row selevtion remains
        runTable.setRowSelectionInterval(selectRow, selectRow);
    }//GEN-LAST:event_btnUpdRunActionPerformed

    private void btnRunDelResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRunDelResetActionPerformed
    	logger.debug("RunDB_2 Application btnRunDelResetActionPerformed() method 001 - Logging DEBUG");
        //initialise fields on Run Maint/Delete Run when Reset is clicked
        fieldDelRunDate.setText("");
        fieldDelRunCrse.setText("");
        fieldDelRunMiles.setText("");
        fieldDelRunTime.setText("");
        runTable.getSelectionModel().clearSelection();
    }//GEN-LAST:event_btnRunDelResetActionPerformed

    private void fieldDelRunDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldDelRunDateActionPerformed
    	logger.debug("RunDB_2 Application fieldDelRunDateActionPerformed() method 001 - Logging DEBUG");
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldDelRunDateActionPerformed

    private void fieldDelRunMilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldDelRunMilesActionPerformed
    	logger.debug("RunDB_2 Application fieldDelRunMilesActionPerformed() method 001 - Logging DEBUG");
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldDelRunMilesActionPerformed

    private void btnDelRunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelRunActionPerformed
    	logger.debug("RunDB_2 Application btnDelRunActionPerformed() method 001 - Logging DEBUG");
        //Delete a run when Delete button clicked on Run Maint/Delete Run
        int selectRow;
        //Ensure a row is se;ected
        if(runTable.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this, prp.getRunProp("err.msg.delRun.no.selection"), "Error", JOptionPane.ERROR_MESSAGE);
            return;
        } else {
            selectRow = runTable.getSelectedRow(); 
        }
        //Getthe RunId for the selected run - required to delete
        LifetimeRecord lr = new LifetimeRecord();
        ArrayList<ArrayList<String>> runRecs;
        runRecs = lr.getLifetimeData();
        
        for(int i = 0; i< runRecs.size(); i++) {
            if (i == selectRow){
                Run r1 = new Run();
                r1.deleteRun(Integer.parseInt(runRecs.get(i).get(5)));
            }
        }
        //Build Table of runs
        buildCompRunsTable();
        //initialise fields
        fieldDelRunDate.setText("");
        fieldDelRunCrse.setText("");
        fieldDelRunMiles.setText("");
        fieldDelRunTime.setText("");
    }//GEN-LAST:event_btnDelRunActionPerformed

    private void panelDelRunComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_panelDelRunComponentShown
    	logger.debug("RunDB_2 Application panelDelRunComponentShown() method 001 - Logging DEBUG");
        //Build Run Maint/Delete Run tab when screen loaded
        //Build Table of runs
        buildCompRunsTable();

        fieldDelRunDate.setText("");
        fieldDelRunCrse.setText("");
        fieldDelRunMiles.setText("");
        fieldDelRunTime.setText("");
    }//GEN-LAST:event_panelDelRunComponentShown

    private void btnAddCrseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddCrseActionPerformed
    	logger.debug("RunDB_2 Application btnAddCrseActionPerformed() method 001 - Logging DEBUG");
        //Course Maint/Add Crse Add button clicked
        //Validate Course Desc and Mileage fields have been correctly populated
        FieldValidator fv = new FieldValidator();
        if (fieldAddCrseDesc.getText().equals("")) {
            JOptionPane.showMessageDialog(this, prp.getRunProp("err.msg.addCrse.no.desc"), "Error", JOptionPane.ERROR_MESSAGE);
            return;
        } else {
            if (fieldAddCrseMiles.getText().equals("")) {
                JOptionPane.showMessageDialog(this, prp.getRunProp("err.msg.addCrse.no.miles"), "Error", JOptionPane.ERROR_MESSAGE);
                return;
            } else {
                if(fv.validateMiles(fieldAddCrseMiles.getText())) {
                    Course c1 = new Course();
                    c1.addCourse(fieldAddCrseDesc.getText(), Double.parseDouble(fieldAddCrseMiles.getText()));
                } else {
                    JOptionPane.showMessageDialog(this, prp.getRunProp("err.msg.invalid.miles"), "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }
        }
        //Rebuild Courses Table
        buildCourseTable();
    }//GEN-LAST:event_btnAddCrseActionPerformed

    private void fieldAddCrseDescActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldAddCrseDescActionPerformed
    	logger.debug("RunDB_2 Application fieldAddCrseDescActionPerformed() method 001 - Logging DEBUG");
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldAddCrseDescActionPerformed

    private void fieldAddCrseMilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldAddCrseMilesActionPerformed
    	logger.debug("RunDB_2 Application fieldAddCrseMilesActionPerformed() method 001 - Logging DEBUG");
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldAddCrseMilesActionPerformed

    private void btnCrseAddResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrseAddResetActionPerformed
    	logger.debug("RunDB_2 Application btnCrseAddResetActionPerformed() method 001 - Logging DEBUG");
        //Initialise fields on Course Maint/Add Crse when Reset clicked
        fieldAddCrseDesc.setText("");
        fieldAddCrseMiles.setText("");
        crseTable.getSelectionModel().clearSelection();
    }//GEN-LAST:event_btnCrseAddResetActionPerformed

    private void panelAddCrseComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_panelAddCrseComponentShown
    	logger.debug("RunDB_2 Application panelAddCrseComponentShown() method 001 - Logging DEBUG");
        //load Crse Table and initialise fields when Course Maint/Add Crse clicked
        buildCourseTable();
        
        fieldAddCrseDesc.setText("");
        fieldAddCrseMiles.setText("");
    }//GEN-LAST:event_panelAddCrseComponentShown

    private void crseTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_crseTableMouseClicked
    	logger.debug("RunDB_2 Application crseTableMouseClicked() method 001 - Logging DEBUG");
        //User has selected a Row on Crse Table - populate fields with selected details
        DefaultTableModel model = (DefaultTableModel)crseTable.getModel();
        int selectedRowIndex = crseTable.getSelectedRow();
        
        fieldUpdCrseDesc.setText(model.getValueAt(selectedRowIndex, 1).toString());
        fieldUpdCrseMiles.setText(model.getValueAt(selectedRowIndex, 2).toString());

        fieldDelCrseDesc.setText(model.getValueAt(selectedRowIndex, 1).toString());
        fieldDelCrseMiles.setText(model.getValueAt(selectedRowIndex, 2).toString());
    }//GEN-LAST:event_crseTableMouseClicked

    private void btnUpdCrseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdCrseActionPerformed
    	logger.debug("RunDB_2 Application btnUpdCrseActionPerformed() method 001 - Logging DEBUG");
        //Course Maint/Update Crse Update Course button clicked
        //Ensure a row is selected
        int selectRow;

        if(crseTable.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this, prp.getRunProp("err.msg.updCrse.no.selection"), "Error", JOptionPane.ERROR_MESSAGE);
            return;
        } else {
            selectRow = crseTable.getSelectedRow(); 
        }

        //Validate the Description and Miles fields
        FieldValidator fv = new FieldValidator();
        if (fieldUpdCrseDesc.getText().equals("")) {
            JOptionPane.showMessageDialog(this, prp.getRunProp("err.msg.updCrse.no.desc"), "Error", JOptionPane.ERROR_MESSAGE);
            return;
        } else {
            if (fieldUpdCrseMiles.getText().equals("")) {
                JOptionPane.showMessageDialog(this, prp.getRunProp("err.msg.updCrse.no.miles"), "Error", JOptionPane.ERROR_MESSAGE);
                return;
            } else {
                //If Desc and Mileage fields are valid, get the crse ID of selected row required for update
                if(fv.validateMiles(fieldUpdCrseMiles.getText())) {
                    Course crse1 = new Course();
                    ArrayList<ArrayList<String>> crseRecs;
                    crseRecs = crse1.getCrseList();
        
                    for(int i = 0; i< crseRecs.size(); i++) {
                        if (i == selectRow){
                            Course crse2 = new Course();
                            crse2.updateCourse(Integer.parseInt(crseRecs.get(i).get(0)),fieldUpdCrseDesc.getText(), Double.parseDouble(fieldUpdCrseMiles.getText()));
                        }
                    }
                } else {
                    JOptionPane.showMessageDialog(this, prp.getRunProp("err.msg.invalid.miles"), "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }
        }
        //Build Table of courses
        buildCourseTable();
        //Ensure row selevtion remains
        crseTable.setRowSelectionInterval(selectRow, selectRow);
    }//GEN-LAST:event_btnUpdCrseActionPerformed

    private void fieldUpdCrseDescActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldUpdCrseDescActionPerformed
    	logger.debug("RunDB_2 Application fieldUpdCrseDescActionPerformed() method 001 - Logging DEBUG");
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldUpdCrseDescActionPerformed

    private void fieldUpdCrseMilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldUpdCrseMilesActionPerformed
    	logger.debug("RunDB_2 Application fieldUpdCrseMilesActionPerformed() method 001 - Logging DEBUG");
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldUpdCrseMilesActionPerformed

    private void btnCrseUpdResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrseUpdResetActionPerformed
    	logger.debug("RunDB_2 Application btnCrseUpdResetActionPerformed() method 001 - Logging DEBUG");
        //Initialise fields when Course Maint/Update Crse Reset is clicked
        fieldUpdCrseDesc.setText("");
        fieldUpdCrseMiles.setText("");
        crseTable.getSelectionModel().clearSelection();
    }//GEN-LAST:event_btnCrseUpdResetActionPerformed

    private void panelUpdCrseComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_panelUpdCrseComponentShown
    	logger.debug("RunDB_2 Application panelUpdCrseComponentShown() method 001 - Logging DEBUG");
        //Initialise fields and build course table Course Maint/Update Crse panel is loaded
        buildCourseTable();
        
        fieldUpdCrseDesc.setText("");
        fieldUpdCrseMiles.setText("");
    }//GEN-LAST:event_panelUpdCrseComponentShown

    private void btnDelCrseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelCrseActionPerformed
    	logger.debug("RunDB_2 Application btnDelCrseActionPerformed() method 001 - Logging DEBUG");
        //Course Maint/Delete Crse Delete button clicked
        //Ensure a row is selected
        int selectRow;
        if(crseTable.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this, prp.getRunProp("err.msg.delCrse.no.selection"), "Error", JOptionPane.ERROR_MESSAGE);
            return;
        } else {
            selectRow = crseTable.getSelectedRow(); 
        }
        //Get Crse Id from Crse Id dropdown box(selecetd row) to enable delete
        Course crse1 = new Course();
        ArrayList<ArrayList<String>> crseRecs;
        crseRecs = crse1.getCrseList();
        
        for(int i = 0; i< crseRecs.size(); i++) {
            if (i == selectRow){
                Course crse2 = new Course();
                crse2.deleteCourse(Integer.parseInt(crseRecs.get(i).get(0)));
            }
        }
        //Build Table of runs
        buildCourseTable();
        //initialise fields
        fieldDelCrseDesc.setText("");
        fieldDelCrseMiles.setText("");
    }//GEN-LAST:event_btnDelCrseActionPerformed

    private void fieldDelCrseDescActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldDelCrseDescActionPerformed
    	logger.debug("RunDB_2 Application fieldDelCrseDescActionPerformed() method 001 - Logging DEBUG");
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldDelCrseDescActionPerformed

    private void fieldDelCrseMilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldDelCrseMilesActionPerformed
    	logger.debug("RunDB_2 Application fieldDelCrseMilesActionPerformed() method 001 - Logging DEBUG");
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldDelCrseMilesActionPerformed

    private void btnCrseDelResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrseDelResetActionPerformed
    	logger.debug("RunDB_2 Application btnCrseDelResetActionPerformed() method 001 - Logging DEBUG");
        //Course Maint/Delete Course - initilaise fields when Reset clicked
        fieldDelCrseDesc.setText("");
        fieldDelCrseMiles.setText("");
        crseTable.getSelectionModel().clearSelection();
    }//GEN-LAST:event_btnCrseDelResetActionPerformed

    private void panelDelCrseComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_panelDelCrseComponentShown
    	logger.debug("RunDB_2 Application panelDelCrseComponentShown() method 001 - Logging DEBUG");
        //Course Maint/Delete Course Panel loaded
        buildCourseTable();
        
        fieldDelCrseDesc.setText("");
        fieldDelCrseMiles.setText("");
    }//GEN-LAST:event_panelDelCrseComponentShown

    private void crseRecsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_crseRecsTableMouseClicked
    	logger.debug("RunDB_2 Application crseRecsTableMouseClicked() method 001 - Logging DEBUG");
        // TODO add your handling code here:
    }//GEN-LAST:event_crseRecsTableMouseClicked

    private void courseRecPanelComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_courseRecPanelComponentShown
    	logger.debug("RunDB_2 Application courseRecPanelComponentShown() method 001 - Logging DEBUG");
        //Build Course Record Panel
        //Build list of Courses
        Course cr = new Course();
        ArrayList<ArrayList<String>> crseListRecs;
        crseListRecs = cr.getCrseList();

        int index = 0;
        comboCrseRecCrseId.removeAllItems();
        fieldCRecDesc.setText("");
        fieldCRecMiles.setText("");
        
        for(ArrayList<String> row : crseListRecs) {
            comboCrseRecCrseId.addItem(row.get(0));
            // set initial values to first entry
            if (index == 0){
                fieldCRecDesc.setText(row.get(1));
                fieldCRecMiles.setText(row.get(2));
            }
            index++;
        }
    }//GEN-LAST:event_courseRecPanelComponentShown

    private void comboCrseRecCrseIdItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboCrseRecCrseIdItemStateChanged
    	logger.debug("RunDB_2 Application comboCrseRecCrseIdItemStateChanged() method 001 - Logging DEBUG");
        //User selects crse Id from Course REcord Crse Id drowpdown
        if (evt.getStateChange() == ItemEvent.DESELECTED){
        } else {
            //Build list of Courses
            Course cr = new Course();
            ArrayList<ArrayList<String>> crseListRecs;
            crseListRecs = cr.getCrseList();

            //Set key fields based on the selected crse ID
            int index = 0;
            for(ArrayList<String> row : crseListRecs) {
                if (index == comboCrseRecCrseId.getSelectedIndex()){
                    fieldCRecDesc.setText(row.get(1));
                    fieldCRecMiles.setText(row.get(2));
                    int crseId = Integer.parseInt(row.get(0));
                    //Populate Key fields
                    CourseRecord crse1 = new CourseRecord();
                    fieldCRecNumRuns.setText(crse1.calcTotalRuns(crseId));
                    fieldCRecAvgTime.setText(crse1.calcCrseAvgTime(crseId).equals("NoData")?"":crse1.calcCrseAvgTime(crseId));
                    fieldCRecBestTime.setText(crse1.calcCrseBestTime(crseId).get(0).equals("NoData")?"":crse1.calcCrseBestTime(crseId).get(1).substring(0,8));
                    fieldCRecBestDate.setText(crse1.calcCrseBestTime(crseId).get(0).equals("NoData")?"":crse1.calcCrseBestTime(crseId).get(0));
                    fieldCRecWorstTime.setText(crse1.calcCrseWorstTime(crseId).get(0).equals("NoData")?"":crse1.calcCrseWorstTime(crseId).get(1).substring(0,8));
                    fieldCRecWorstDate.setText(crse1.calcCrseWorstTime(crseId).get(0).equals("NoData")?"":crse1.calcCrseWorstTime(crseId).get(0));
                    //build Course Runs Table for that course
                    buildCourseRunsTable(crseId);
                }
                index++;
            }
        }
    }//GEN-LAST:event_comboCrseRecCrseIdItemStateChanged

    private void annRecsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_annRecsTableMouseClicked
    	logger.debug("RunDB_2 Application annRecsTableMouseClicked() method 001 - Logging DEBUG");
        // TODO add your handling code here:
    }//GEN-LAST:event_annRecsTableMouseClicked

    private void comboAnnRecYearItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboAnnRecYearItemStateChanged
    	logger.debug("RunDB_2 Application comboAnnRecYearItemStateChanged() method 001 - Logging DEBUG");
        //User selected Year from Annual Record Year combo box - build other fields/table for that year
        if (evt.getStateChange() == ItemEvent.DESELECTED){
        } else {
            //Build list of Courses
            AnnualRecord annrec = new AnnualRecord();
            ArrayList<String> years;
            years = annrec.getYearList();
            
            int index = 0;
            for(String year : years) {
                if (index == comboAnnRecYear.getSelectedIndex()){
                    fieldARecTotal.setText(annrec.getTotalRuns(year));
                    fieldARecMiles.setText(annrec.getTotalMiles(year));
                    buildAnnualRecsTable(year);
                }
                index++;
            }
        }
    }//GEN-LAST:event_comboAnnRecYearItemStateChanged

    private void annualRecPanelComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_annualRecPanelComponentShown
    	logger.debug("RunDB_2 Application annualRecPanelComponentShown() method 001 - Logging DEBUG");
        // Load Annual Record Panel 
        //Build list of Courses
        AnnualRecord annrec = new AnnualRecord();
        ArrayList<String> yearListRecs;
        yearListRecs = annrec.getYearList();

        int index = 0;
        comboAnnRecYear.removeAllItems();

        for(String yyyy : yearListRecs) {
            comboAnnRecYear.addItem(yyyy);
            index++;
        }
    }//GEN-LAST:event_annualRecPanelComponentShown

    private void lifeRecsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lifeRecsTableMouseClicked
    	logger.debug("RunDB_2 Application lifeRecsTableMouseClicked() method 001 - Logging DEBUG");
        // TODO add your handling code here:
    }//GEN-LAST:event_lifeRecsTableMouseClicked

    private void lifetimeRecPanelComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_lifetimeRecPanelComponentShown
    	logger.debug("RunDB_2 Application lifetimeRecPanelComponentShown() method 001 - Logging DEBUG");
        //Load Lifetime REcord panel
        LifetimeRecord lrec = new LifetimeRecord();
        fieldLifeTotal.setText(lrec.getTotalRuns());
        fieldLifeMiles.setText(lrec.getTotalMiles());
        buildLifeRecsTable();
        lifeRecsTable.getSelectionModel().clearSelection();
    }//GEN-LAST:event_lifetimeRecPanelComponentShown

    private void fieldLifeMilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldLifeMilesActionPerformed
    	logger.debug("RunDB_2 Application fieldLifeMilesActionPerformed() method 001 - Logging DEBUG");
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldLifeMilesActionPerformed

    private void fieldCRecWorstDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldCRecWorstDateActionPerformed
    	logger.debug("RunDB_2 Application fieldCRecWorstDateActionPerformed() method 001 - Logging DEBUG");
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldCRecWorstDateActionPerformed

    private void fieldCRecBestDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldCRecBestDateActionPerformed
    	logger.debug("RunDB_2 Application fieldCRecBestDateActionPerformed() method 001 - Logging DEBUG");
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldCRecBestDateActionPerformed

    private void buildCompRunsTable() {
    	logger.debug("RunDB_2 Application buildCompRunsTable() method 001 - Logging DEBUG");
        //Build the Table of completed Runs used on Run Maintenance
        //Build Table of runs
        LifetimeRecord lr = new LifetimeRecord();
        ArrayList<ArrayList<String>> runRecs;
        runRecs = lr.getLifetimeData();
        
        DefaultTableModel model = (DefaultTableModel) runTable.getModel();
        //initialise table in case being rebuilt    
        model.setRowCount(0);
        
        //Use row.get(n) when n corresponds to SQL script field order
        for(ArrayList<String> row : runRecs) {
            Object[] rowData = new Object[] {row.get(0), row.get(3), row.get(4), row.get(2).substring(0,8)}; 
            model.addRow(rowData);
        }
        model.fireTableDataChanged();
    }
    
    private void buildCourseRunsTable(int crseId) {
    	logger.debug("RunDB_2 Application buildCourseRunsTable() method 001 - Logging DEBUG");
        //Build the Table of Courses Records used on Course Records
        //Build Table of Course Recs
        CourseRecord crec = new CourseRecord();
        ArrayList<ArrayList<String>> crseRunRecs;
        crseRunRecs = crec.getCrseData(crseId);
        
        DefaultTableModel model = (DefaultTableModel) crseRecsTable.getModel();
        //initialise table in case being rebuilt    
        model.setRowCount(0);
        
        //Use row.get(n) when n corresponds to SQL script field order
        for(ArrayList<String> row : crseRunRecs) {
            Object[] rowData = new Object[] {row.get(0), row.get(1), row.get(3).substring(0,8)}; 
            model.addRow(rowData);
        }
        model.fireTableDataChanged();
    }
    
    private void buildAnnualRecsTable(String year) {
    	logger.debug("RunDB_2 Application buildAnnualRecsTable() method 001 - Logging DEBUG");
        //Build the Table of Annual Recs used on Annual Records
        //Build Table of runs
        AnnualRecord annrec = new AnnualRecord();
        ArrayList<ArrayList<String>> annData;
        ArrayList<ArrayList<String>> annRecs;

        annData = annrec.getAnnualData(year);
        annRecs = annrec.getAnnualRecs(annData);

        DefaultTableModel model = (DefaultTableModel) annRecsTable.getModel();
        //initialise table in case being rebuilt    
        model.setRowCount(0);

        //Use row.get(n) when n corresponds to SQL script field order
        for(ArrayList<String> row : annRecs) {
            Object[] rowData = new Object[] {row.get(0), row.get(7) , row.get(8), row.get(5), row.get(1).substring(0,8), row.get(2), row.get(3).substring(0,8), row.get(4), row.get(6).substring(0,8)}; 
            model.addRow(rowData);
        }
        model.fireTableDataChanged();
    }
    
    private void buildLifeRecsTable() {
    	logger.debug("RunDB_2 Application buildLifeRecsTable() method 001 - Logging DEBUG");
        //Build the Table of Lifetime Recs used on Lifetime Records
        //Build Table of runs
        LifetimeRecord liferec = new LifetimeRecord();
        ArrayList<ArrayList<String>> lifeData;
        ArrayList<ArrayList<String>> lifeRecs;

        lifeData = liferec.getLifetimeData();
        lifeRecs = liferec.getLifetimeRecs(lifeData);

        DefaultTableModel model = (DefaultTableModel) lifeRecsTable.getModel();
        //initialise table in case being rebuilt    
        model.setRowCount(0);
        
        //Use row.get(n) when n corresponds to SQL script field order
        for(ArrayList<String> row : lifeRecs) {
            Object[] rowData = new Object[] {row.get(0), row.get(7) , row.get(8), row.get(5), row.get(1).substring(0,8), row.get(2), row.get(3).substring(0,8), row.get(4), row.get(6).substring(0,8)}; 
            model.addRow(rowData);
        }
        model.fireTableDataChanged();
    }
    
    private void buildCourseTable() {
    	logger.debug("RunDB_2 Application buildCourseTable() method 001 - Logging DEBUG");
        //Build the Table of Courses used on Course Maintenance
        //Build Table of courses
        Course c1 = new Course();
        ArrayList<ArrayList<String>> crseRecs;
        crseRecs = c1.getCrseList();
        
        DefaultTableModel model = (DefaultTableModel) crseTable.getModel();
        //initialise table in case being rebuilt    
        model.setRowCount(0);
        
        //Use row.get(n) when n corresponds to SQL script field order
        for(ArrayList<String> row : crseRecs) {
            Object[] rowData = new Object[] {row.get(0), row.get(1), row.get(2)}; 
            model.addRow(rowData);
        }
        model.fireTableDataChanged();
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RunGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RunGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RunGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RunGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RunGui().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable annRecsTable;
    private javax.swing.JPanel annualRecPanel;
    private javax.swing.JPanel appPanel;
    private javax.swing.JButton btnAddCrse;
    private javax.swing.JButton btnAddRun;
    private javax.swing.JButton btnCrseAddReset;
    private javax.swing.JButton btnCrseDelReset;
    private javax.swing.JButton btnCrseUpdReset;
    private javax.swing.JButton btnDelCrse;
    private javax.swing.JButton btnDelRun;
    private javax.swing.JButton btnRunAddReset;
    private javax.swing.JButton btnRunDelReset;
    private javax.swing.JButton btnRunUpdReset;
    private javax.swing.JButton btnUpdCrse;
    private javax.swing.JButton btnUpdRun;
    private javax.swing.JComboBox<String> comboAddRunCrseId;
    private javax.swing.JComboBox<String> comboAnnRecYear;
    private javax.swing.JComboBox<String> comboCrseRecCrseId;
    private javax.swing.JPanel coursePanel;
    private javax.swing.JPanel courseRecPanel;
    private javax.swing.JTable crseRecsTable;
    private javax.swing.JTable crseTable;
    private javax.swing.JTextField fieldARecMiles;
    private javax.swing.JTextField fieldARecTotal;
    private javax.swing.JTextField fieldAddCrseDesc;
    private javax.swing.JTextField fieldAddCrseMiles;
    private javax.swing.JTextField fieldAddRunCrse2;
    private javax.swing.JTextField fieldAddRunCrse3;
    private javax.swing.JTextField fieldAddRunDate;
    private javax.swing.JTextField fieldAddRunTime;
    private javax.swing.JTextField fieldCRecAvgTime;
    private javax.swing.JTextField fieldCRecBestDate;
    private javax.swing.JTextField fieldCRecBestTime;
    private javax.swing.JTextField fieldCRecDesc;
    private javax.swing.JTextField fieldCRecMiles;
    private javax.swing.JTextField fieldCRecNumRuns;
    private javax.swing.JTextField fieldCRecWorstDate;
    private javax.swing.JTextField fieldCRecWorstTime;
    private javax.swing.JTextField fieldDelCrseDesc;
    private javax.swing.JTextField fieldDelCrseMiles;
    private javax.swing.JTextField fieldDelRunCrse;
    private javax.swing.JTextField fieldDelRunDate;
    private javax.swing.JTextField fieldDelRunMiles;
    private javax.swing.JTextField fieldDelRunTime;
    private javax.swing.JTextField fieldLifeMiles;
    private javax.swing.JTextField fieldLifeTotal;
    private javax.swing.JTextField fieldUpdCrseDesc;
    private javax.swing.JTextField fieldUpdCrseMiles;
    private javax.swing.JTextField fieldUpdRunCrse;
    private javax.swing.JTextField fieldUpdRunDate;
    private javax.swing.JTextField fieldUpdRunMiles;
    private javax.swing.JTextField fieldUpdRunTime;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JLabel labelARecTotMiles;
    private javax.swing.JLabel labelARecTotRuns;
    private javax.swing.JLabel labelAddRunCrse2;
    private javax.swing.JLabel labelAddRunCrse3;
    private javax.swing.JLabel labelAddRunCrse4;
    private javax.swing.JLabel labelAddRunCrse5;
    private javax.swing.JLabel labelAddRunDate;
    private javax.swing.JLabel labelAddRunTime;
    private javax.swing.JLabel labelAnnualRecsTitle;
    private javax.swing.JLabel labelAppTitle;
    private javax.swing.JLabel labelCRecAvgTime;
    private javax.swing.JLabel labelCRecBestDate;
    private javax.swing.JLabel labelCRecBestTime;
    private javax.swing.JLabel labelCRecCrseMiles;
    private javax.swing.JLabel labelCRecNumRuns;
    private javax.swing.JLabel labelCRecWorstDate;
    private javax.swing.JLabel labelCRecWorstTime;
    private javax.swing.JLabel labelCourseRecsTitle;
    private javax.swing.JLabel labelCourseTitle;
    private javax.swing.JLabel labelDelCrseDesc;
    private javax.swing.JLabel labelDelCrseMiles;
    private javax.swing.JLabel labelDelRunCrse;
    private javax.swing.JLabel labelDelRunDate;
    private javax.swing.JLabel labelDelRunMiles;
    private javax.swing.JLabel labelDelRunTime;
    private javax.swing.JLabel labelLifeRecsTitle;
    private javax.swing.JLabel labelLifeTotMiles;
    private javax.swing.JLabel labelLifeTotRuns;
    private javax.swing.JLabel labelRunTitle;
    private javax.swing.JLabel labelUpdCrseDesc;
    private javax.swing.JLabel labelUpdCrseMiles;
    private javax.swing.JLabel labelUpdRunCrse;
    private javax.swing.JLabel labelUpdRunDate;
    private javax.swing.JLabel labelUpdRunMiles;
    private javax.swing.JLabel labelUpdRunTime;
    private javax.swing.JTable lifeRecsTable;
    private javax.swing.JPanel lifetimeRecPanel;
    private javax.swing.JPanel panelARecsKeySelect;
    private javax.swing.JPanel panelAddCrse;
    private javax.swing.JPanel panelAddRun;
    private javax.swing.JPanel panelCRecsKeyData;
    private javax.swing.JPanel panelCRecsKeySelect;
    private javax.swing.JPanel panelDelCrse;
    private javax.swing.JPanel panelDelRun;
    private javax.swing.JPanel panelLifeKey;
    private javax.swing.JPanel panelUpdCrse;
    private javax.swing.JPanel panelUpdRun;
    private javax.swing.JPanel runPanel;
    private javax.swing.JTabbedPane runTabPane;
    private javax.swing.JTable runTable;
    private javax.swing.JTabbedPane tabPaneCourse;
    private javax.swing.JTabbedPane tabPaneRun;
    // End of variables declaration//GEN-END:variables
}

